{"version":3,"file":"student.min.js","sources":["../src/student.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package   mod_jazzquiz\n * @author    Sebastian S. Gundersen <sebastsg@stud.ntnu.no>\n * @copyright 2014 University of Wisconsin - Madison\n * @copyright 2018 NTNU\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'mod_jazzquiz/core'], function ($, Jazz) {\n\n    const Quiz = Jazz.Quiz;\n    const Question = Jazz.Question;\n    const Ajax = Jazz.Ajax;\n    const setText = Jazz.setText;\n\n    class Student {\n\n        /**\n         * @param {Quiz} quiz\n         */\n        constructor(quiz) {\n            this.quiz = quiz;\n            this.voteAnswer = undefined;\n            let self = this;\n            $(document).on('submit', '#jazzquiz_question_form', function(event) {\n                event.preventDefault();\n                self.submitAnswer();\n            }).on('click', '#jazzquiz_save_vote', function() {\n                self.saveVote();\n            }).on('click', '.jazzquiz-select-vote', function() {\n                self.voteAnswer = this.value;\n            });\n        }\n\n        onNotRunning(data) {\n            setText(Quiz.info, 'instructions_for_student');\n        }\n\n        onPreparing(data) {\n            setText(Quiz.info, 'wait_for_instructor');\n        }\n\n        onRunning(data) {\n            if (this.quiz.question.isRunning) {\n                return;\n            }\n            const started = this.quiz.question.startCountdown(data.questiontime, data.delay);\n            if (!started) {\n                setText(Quiz.info, 'wait_for_instructor');\n            }\n        }\n\n        onReviewing(data) {\n            this.quiz.question.isVoteRunning = false;\n            this.quiz.question.isRunning = false;\n            this.quiz.question.hideTimer();\n            Quiz.hide(Question.box);\n            setText(Quiz.info, 'wait_for_instructor');\n        }\n\n        onSessionClosed(data) {\n            window.location = location.href.split('&')[0];\n        }\n\n        onVoting(data) {\n            if (this.quiz.question.isVoteRunning) {\n                return;\n            }\n            Quiz.info.html(data.html);\n            Quiz.show(Quiz.info);\n            const options = data.options;\n            for (let i = 0; i < options.length; i++) {\n                Quiz.addMathjaxElement($('#' + options[i].content_id), options[i].text);\n                if (options[i].question_type === 'stack') {\n                    Quiz.renderMaximaEquation(options[i].text, options[i].content_id);\n                }\n            }\n            this.quiz.question.isVoteRunning = true;\n        }\n\n        onStateChange(state) {\n\n        }\n\n        onQuestionTimerEnding() {\n\n        }\n\n        onTimerTick(timeLeft) {\n            setText(Question.timer, 'question_will_end_in_x_seconds', 'jazzquiz', timeLeft);\n        }\n\n        onQuestionRefreshed(data) {\n\n        }\n\n        /**\n         * Submit answer for the current question.\n         */\n        submitAnswer() {\n            if (this.quiz.question.isSaving) {\n                // Don't save twice.\n                return;\n            }\n            this.quiz.question.isSaving = true;\n            if (typeof tinyMCE !== 'undefined') {\n                tinyMCE.triggerSave();\n            }\n            const serialized = Question.form.serializeArray();\n            let data = {};\n            for (let name in serialized) {\n                if (serialized.hasOwnProperty(name)) {\n                    data[serialized[name].name] = serialized[name].value;\n                }\n            }\n            Ajax.post('save_question', data, data => {\n                if (data.feedback.length > 0) {\n                    Quiz.show(Quiz.info.html(data.feedback));\n                } else {\n                    setText(Quiz.info, 'wait_for_instructor');\n                }\n                this.quiz.question.isSaving = false;\n                if (!this.quiz.question.isRunning) {\n                    return;\n                }\n                if (this.quiz.question.isVoteRunning) {\n                    return;\n                }\n                Quiz.hide(Question.box);\n                this.quiz.question.hideTimer();\n            }).fail(() => {\n                this.quiz.question.isSaving = false;\n            });\n        }\n\n        saveVote() {\n            Ajax.post('save_vote', {vote: this.voteAnswer}, data => {\n                if (data.status === 'success') {\n                    setText(Quiz.info, 'wait_for_instructor');\n                } else {\n                    setText(Quiz.info, 'you_already_voted');\n                }\n            });\n        }\n\n    }\n\n    return {\n        initialize: () => {\n            let quiz = new Quiz(Student);\n            quiz.poll(2000);\n        }\n    }\n\n});\n"],"names":["define","$","Jazz","Quiz","Question","Ajax","setText","Student","constructor","quiz","voteAnswer","undefined","self","this","document","on","event","preventDefault","submitAnswer","saveVote","value","onNotRunning","data","info","onPreparing","onRunning","question","isRunning","startCountdown","questiontime","delay","onReviewing","isVoteRunning","hideTimer","hide","box","onSessionClosed","window","location","href","split","onVoting","html","show","options","i","length","addMathjaxElement","content_id","text","question_type","renderMaximaEquation","onStateChange","state","onQuestionTimerEnding","onTimerTick","timeLeft","timer","onQuestionRefreshed","isSaving","tinyMCE","triggerSave","serialized","form","serializeArray","name","hasOwnProperty","post","feedback","fail","vote","status","initialize","poll"],"mappings":";;;;;;;AAuBAA,8BAAO,CAAC,SAAU,sBAAsB,SAAUC,EAAGC,YAE3CC,KAAOD,KAAKC,KACZC,SAAWF,KAAKE,SAChBC,KAAOH,KAAKG,KACZC,QAAUJ,KAAKI,cAEfC,QAKFC,YAAYC,WACHA,KAAOA,UACPC,gBAAaC,MACdC,KAAOC,KACXZ,EAAEa,UAAUC,GAAG,SAAU,2BAA2B,SAASC,OACzDA,MAAMC,iBACNL,KAAKM,kBACNH,GAAG,QAAS,uBAAuB,WAClCH,KAAKO,cACNJ,GAAG,QAAS,yBAAyB,WACpCH,KAAKF,WAAaG,KAAKO,SAI/BC,aAAaC,MACThB,QAAQH,KAAKoB,KAAM,4BAGvBC,YAAYF,MACRhB,QAAQH,KAAKoB,KAAM,uBAGvBE,UAAUH,SACFT,KAAKJ,KAAKiB,SAASC,iBAGPd,KAAKJ,KAAKiB,SAASE,eAAeN,KAAKO,aAAcP,KAAKQ,QAEtExB,QAAQH,KAAKoB,KAAM,uBAI3BQ,YAAYT,WACHb,KAAKiB,SAASM,eAAgB,OAC9BvB,KAAKiB,SAASC,WAAY,OAC1BlB,KAAKiB,SAASO,YACnB9B,KAAK+B,KAAK9B,SAAS+B,KACnB7B,QAAQH,KAAKoB,KAAM,uBAGvBa,gBAAgBd,MACZe,OAAOC,SAAWA,SAASC,KAAKC,MAAM,KAAK,GAG/CC,SAASnB,SACDT,KAAKJ,KAAKiB,SAASM,qBAGvB7B,KAAKoB,KAAKmB,KAAKpB,KAAKoB,MACpBvC,KAAKwC,KAAKxC,KAAKoB,YACTqB,QAAUtB,KAAKsB,YAChB,IAAIC,EAAI,EAAGA,EAAID,QAAQE,OAAQD,IAChC1C,KAAK4C,kBAAkB9C,EAAE,IAAM2C,QAAQC,GAAGG,YAAaJ,QAAQC,GAAGI,MACjC,UAA7BL,QAAQC,GAAGK,eACX/C,KAAKgD,qBAAqBP,QAAQC,GAAGI,KAAML,QAAQC,GAAGG,iBAGzDvC,KAAKiB,SAASM,eAAgB,EAGvCoB,cAAcC,QAIdC,yBAIAC,YAAYC,UACRlD,QAAQF,SAASqD,MAAO,iCAAkC,WAAYD,UAG1EE,oBAAoBpC,OAOpBJ,kBACQL,KAAKJ,KAAKiB,SAASiC,qBAIlBlD,KAAKiB,SAASiC,UAAW,EACP,oBAAZC,SACPA,QAAQC,oBAENC,WAAa1D,SAAS2D,KAAKC,qBAC7B1C,KAAO,OACN,IAAI2C,QAAQH,WACTA,WAAWI,eAAeD,QAC1B3C,KAAKwC,WAAWG,MAAMA,MAAQH,WAAWG,MAAM7C,OAGvDf,KAAK8D,KAAK,gBAAiB7C,MAAMA,OACzBA,KAAK8C,SAAStB,OAAS,EACvB3C,KAAKwC,KAAKxC,KAAKoB,KAAKmB,KAAKpB,KAAK8C,WAE9B9D,QAAQH,KAAKoB,KAAM,4BAElBd,KAAKiB,SAASiC,UAAW,EACzB9C,KAAKJ,KAAKiB,SAASC,YAGpBd,KAAKJ,KAAKiB,SAASM,gBAGvB7B,KAAK+B,KAAK9B,SAAS+B,UACd1B,KAAKiB,SAASO,iBACpBoC,MAAK,UACC5D,KAAKiB,SAASiC,UAAW,KAItCxC,WACId,KAAK8D,KAAK,YAAa,CAACG,KAAMzD,KAAKH,aAAaY,OACxB,YAAhBA,KAAKiD,OACLjE,QAAQH,KAAKoB,KAAM,uBAEnBjB,QAAQH,KAAKoB,KAAM,+BAO5B,CACHiD,WAAY,KACG,IAAIrE,KAAKI,SACfkE,KAAK"}